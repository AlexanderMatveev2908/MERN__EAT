export const statusVars = [
  "pending",
  "processing",
  "shipped",
  "delivered",
  "cancelled",
];

// for some aspect pipelines mongoDB are similar to vanilla js , only that they are more descriptive , vanilla is more intuitive

export const makeOrdersStatusFields = () => ({
  "restaurants.ordersByStatus": {
    $map: {
      input: statusVars, // is like if we use statusVars.map but here we do not just write map we have also to tell the input is statusVars
      as: "status", //in vanilla is automatic cause we so statusVars.map(status => ), we already tell with syntax name of dynamic var generated by cb
      in: {
        // if i get it in is like return ... or directly implicit return arrow fn, we describe what we want
        status: "$$status",
        // we use double $ when using dynamic var generated by a map, filter or let
        count: {
          $size: {
            //it is like arrayElement.length and return number
            $filter: {
              // it filter but in vanilla it is implicit cause conditions are made by symbols(< ,===, >=), here we need to write explicitly
              input: "$restaurants.orders",
              as: "order",
              cond: { $eq: ["$$order.status", "$$status"] },
            },
          },
        },
      },
    },
  },
});

export const countRatingVars = Array.from({ length: 5 }, (_, i) => i + 1);

export const makeReviewsCountFields = () => ({
  "restaurants.reviewsByRating": {
    $map: {
      input: countRatingVars,
      as: "rating",
      in: {
        rating: "$$rating",
        count: {
          $size: {
            $filter: {
              input: "$restaurants.reviews",
              as: "review",
              cond: { $eq: ["$$review.rating", "$$rating"] },
            },
          },
        },
      },
    },
  },
});
